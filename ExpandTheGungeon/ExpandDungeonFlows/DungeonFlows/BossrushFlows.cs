using Dungeonator;
using System;
using System.Collections.Generic;
using UnityEngine;
using ExpandTheGungeon.ExpandObjects;
using ExpandTheGungeon.ExpandUtilities;

namespace ExpandTheGungeon.ExpandDungeonFlows {

    public class BossrushFlows : ExpandDungeonFlow {
                
        public static DungeonFlow Bossrush_01_Castle;
        public static DungeonFlow Bossrush_01a_Sewer;
        public static DungeonFlow Bossrush_02_Gungeon;
        public static DungeonFlow Bossrush_02a_Cathedral;
        public static DungeonFlow Bossrush_03_Mines;
        public static DungeonFlow Bossrush_04_Catacombs;
        public static DungeonFlow Bossrush_05_Forge;
        public static DungeonFlow Bossrush_06_BulletHell;
        
        public static DungeonFlow Bossrush_01_Castle_Modded;
        public static DungeonFlow MiniBossrush_01;
        
        public static void InitBossrushFlows() {

            Bossrush_01_Castle_Modded = ScriptableObject.CreateInstance<DungeonFlow>();
            MiniBossrush_01 = ScriptableObject.CreateInstance<DungeonFlow>();

            BossRushCurseShrineNode.overrideExactRoom = ExpandPrefabs.gungeon_entrance_bossrush;

            // Dungeon TutorialPrefab = DungeonDatabase.GetOrLoadByName("Base_Tutorial");

            Bossrush_01_Castle = FlowHelpers.DuplicateDungeonFlow(LoadOfficialFlow("Bossrush_01_Castle"));
            Bossrush_01a_Sewer = FlowHelpers.DuplicateDungeonFlow(LoadOfficialFlow("Bossrush_01a_Sewer"));
            Bossrush_02_Gungeon = FlowHelpers.DuplicateDungeonFlow(LoadOfficialFlow("Bossrush_02_Gungeon"));
            Bossrush_02a_Cathedral = FlowHelpers.DuplicateDungeonFlow(LoadOfficialFlow("Bossrush_02a_Cathedral"));
            Bossrush_03_Mines = FlowHelpers.DuplicateDungeonFlow(LoadOfficialFlow("Bossrush_03_Mines"));
            Bossrush_04_Catacombs = FlowHelpers.DuplicateDungeonFlow(LoadOfficialFlow("Bossrush_04_Catacombs"));
            Bossrush_05_Forge = FlowHelpers.DuplicateDungeonFlow(LoadOfficialFlow("Bossrush_05_Forge"));
            Bossrush_06_BulletHell = FlowHelpers.DuplicateDungeonFlow(LoadOfficialFlow("Bossrush_06_BulletHell"));

            
            Bossrush_01_Castle.AllNodes.Clear();

            Bossrush_01_Castle.Initialize();

            Bossrush_01_Castle.AddNodeToFlow(Bossrush_01_Castle_Miniboss_FourthBossRoom, Bossrush_01_Castle_Miniboss_FourthBossFoyer);
            Bossrush_01_Castle.AddNodeToFlow(Bossrush_01_Castle_Miniboss_FourthBossFoyer, Bossrush_01_Castle_Miniboss_ThirdBossRoom);
            Bossrush_01_Castle.AddNodeToFlow(Bossrush_01_Castle_Miniboss_ThirdBossRoom, Bossrush_01_Castle_Miniboss_ThirdBossFoyer);
            Bossrush_01_Castle.AddNodeToFlow(Bossrush_01_Castle_Miniboss_ThirdBossFoyer, Bossrush_01_Castle_Miniboss_SecondBossRoom);
            Bossrush_01_Castle.AddNodeToFlow(Bossrush_01_Castle_Miniboss_SecondBossRoom, Bossrush_01_Castle_Miniboss_SecondBossFoyer);
            Bossrush_01_Castle.AddNodeToFlow(Bossrush_01_Castle_Miniboss_SecondBossFoyer, Bossrush_01_Castle_Miniboss_FirstBossRoom);
            Bossrush_01_Castle.AddNodeToFlow(Bossrush_01_Castle_Miniboss_FirstBossRoom, Bossrush_01_Castle_Miniboss_FirstBossFoyer);
            Bossrush_01_Castle.AddNodeToFlow(Bossrush_01_Castle_Miniboss_FirstBossFoyer, Bossrush_01_Castle_Miniboss_ElevatorShaftEntrance);
            Bossrush_01_Castle.AddNodeToFlow(Bossrush_01_Castle_Miniboss_ElevatorShaftEntrance, BossRush01CastleNode_Entrance);
            Bossrush_01_Castle.AddNodeToFlow(BossRush01CastleNode_Entrance, BossRushCurseShrineNode);
            Bossrush_01_Castle.AddNodeToFlow(BossRushCurseShrineNode, null);
            Bossrush_01_Castle.AddNodeToFlow(BossRush01CastleNode_Exit, BossRush01CastleNode_ThirdBossRoom);
            Bossrush_01_Castle.AddNodeToFlow(BossRush01CastleNode_ThirdBossRoom, BossRush01CastleNode_ThirdBossFoyer);
            Bossrush_01_Castle.AddNodeToFlow(BossRush01CastleNode_ThirdBossFoyer, BossRush01CastleNode_SecondBossRoom);
            Bossrush_01_Castle.AddNodeToFlow(BossRush01CastleNode_SecondBossRoom, BossRush01CastleNode_SecondBossFoyer);
            Bossrush_01_Castle.AddNodeToFlow(BossRush01CastleNode_SecondBossFoyer, BossRush01CastleNode_FirstBossRoom);
            Bossrush_01_Castle.AddNodeToFlow(BossRush01CastleNode_FirstBossRoom, BossRush01CastleNode_FirstBossFoyer);
            Bossrush_01_Castle.AddNodeToFlow(BossRush01CastleNode_FirstBossFoyer, BossRushCurseShrineNode);                        

            Bossrush_01_Castle.FirstNode = BossRushCurseShrineNode;
            
            MiniBossrush_01.name = "MiniBossRush_01";
            MiniBossrush_01.fallbackRoomTable = null;
            MiniBossrush_01.phantomRoomTable = null;
            MiniBossrush_01.subtypeRestrictions = new List<DungeonFlowSubtypeRestriction>(0);
            MiniBossrush_01.flowInjectionData = new List<ProceduralFlowModifierData>(0);
            MiniBossrush_01.sharedInjectionData = new List<SharedInjectionData>(0);

            MiniBossrush_01.Initialize();

            MiniBossrush_01.AddNodeToFlow(MiniBossRushNode_Entrance, null);
            MiniBossrush_01.AddNodeToFlow(MiniBossRushNode_Exit, MiniBossRushNode_FourthBossRoom);
            MiniBossrush_01.AddNodeToFlow(MiniBossRushNode_FourthBossRoom, MiniBossRushNode_FourthBossFoyer);
            MiniBossrush_01.AddNodeToFlow(MiniBossRushNode_FourthBossFoyer, MiniBossRushNode_ThirdBossRoom);
            MiniBossrush_01.AddNodeToFlow(MiniBossRushNode_ThirdBossRoom, MiniBossRushNode_ThirdBossFoyer);
            MiniBossrush_01.AddNodeToFlow(MiniBossRushNode_ThirdBossFoyer, MiniBossRushNode_SecondBossRoom);
            MiniBossrush_01.AddNodeToFlow(MiniBossRushNode_SecondBossRoom, MiniBossRushNode_SecondBossFoyer);
            MiniBossrush_01.AddNodeToFlow(MiniBossRushNode_SecondBossFoyer, MiniBossRushNode_FirstBossRoom);
            MiniBossrush_01.AddNodeToFlow(MiniBossRushNode_FirstBossRoom, MiniBossRushNode_FirstBossFoyer);
            MiniBossrush_01.AddNodeToFlow(MiniBossRushNode_FirstBossFoyer, MiniBossRushNode_Entrance);
            MiniBossrush_01.FirstNode = MiniBossRushNode_Entrance;

            // Null any Dungeon prefabs when done else game will hang when trying to load another level from then in the future.
            // TutorialPrefab = null;
        }

        private static DungeonFlowNode BossRushCurseShrineNode = new DungeonFlowNode(Bossrush_01_Castle) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = Guid.NewGuid().ToString(),
        };

        private static DungeonFlowNode BossRush01CastleNode_Entrance = new DungeonFlowNode(Bossrush_01_Castle) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.HUB,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = ExpandPrefabs.elevator_entrance,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = Guid.NewGuid().ToString(),
        };

        private static DungeonFlowNode BossRush01CastleNode_FirstBossFoyer = new DungeonFlowNode(Bossrush_01_Castle) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = ExpandPrefabs.boss_foyer,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = Guid.NewGuid().ToString(),
        };
        
        private static DungeonFlowNode BossRush01CastleNode_FirstBossRoom = new DungeonFlowNode(Bossrush_01_Castle) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.BOSS,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = ExpandPrefabs.bosstable_01_bulletbros,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = Guid.NewGuid().ToString(),
        };

        private static DungeonFlowNode BossRush01CastleNode_SecondBossFoyer = new DungeonFlowNode(Bossrush_01_Castle) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = ExpandPrefabs.boss_foyer,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = Guid.NewGuid().ToString(),
        };

        private static DungeonFlowNode BossRush01CastleNode_SecondBossRoom = new DungeonFlowNode(Bossrush_01_Castle) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.BOSS,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = ExpandPrefabs.bosstable_01_bulletking,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = Guid.NewGuid().ToString(),
        };

        private static DungeonFlowNode BossRush01CastleNode_ThirdBossFoyer = new DungeonFlowNode(Bossrush_01_Castle) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = ExpandPrefabs.boss_foyer,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = Guid.NewGuid().ToString(),
        };

        private static DungeonFlowNode BossRush01CastleNode_ThirdBossRoom = new DungeonFlowNode(Bossrush_01_Castle) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.BOSS,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = ExpandPrefabs.bosstable_01_gatlinggull,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = Guid.NewGuid().ToString(),
        };

        private static DungeonFlowNode BossRush01CastleNode_Exit = new DungeonFlowNode(Bossrush_01_Castle) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.EXIT,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = ExpandPrefabs.tiny_exit,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = Guid.NewGuid().ToString(),
        };        

        private static DungeonFlowNode MiniBossRushNode_Entrance = new DungeonFlowNode(MiniBossrush_01) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.ENTRANCE,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = ExpandPrefabs.tiny_entrance,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = Guid.NewGuid().ToString(),
        };

        private static DungeonFlowNode MiniBossRushNode_Exit = new DungeonFlowNode(MiniBossrush_01) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.EXIT,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = ExpandPrefabs.tiny_exit,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = Guid.NewGuid().ToString(),
        };


        private static DungeonFlowNode MiniBossRushNode_FirstBossFoyer = new DungeonFlowNode(MiniBossrush_01) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = ExpandPrefabs.boss_foyer,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = Guid.NewGuid().ToString(),
        };

        private static DungeonFlowNode MiniBossRushNode_FirstBossRoom = new DungeonFlowNode(MiniBossrush_01) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.BOSS,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = ExpandPrefabs.tutorial_minibossroom,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = Guid.NewGuid().ToString(),
        };

        private static DungeonFlowNode MiniBossRushNode_SecondBossFoyer = new DungeonFlowNode(MiniBossrush_01) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = ExpandPrefabs.boss_foyer,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = Guid.NewGuid().ToString(),
        };

        private static DungeonFlowNode MiniBossRushNode_SecondBossRoom = new DungeonFlowNode(MiniBossrush_01) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.BOSS,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = ExpandPrefabs.blocknerminiboss_table_01.includedRooms.elements[UnityEngine.Random.Range(0, ExpandPrefabs.blocknerminiboss_table_01.includedRooms.elements.Count)].room,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = Guid.NewGuid().ToString(),
        };

        private static DungeonFlowNode MiniBossRushNode_ThirdBossFoyer = new DungeonFlowNode(MiniBossrush_01) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = ExpandPrefabs.boss_foyer,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = Guid.NewGuid().ToString(),
        };

        private static DungeonFlowNode MiniBossRushNode_ThirdBossRoom = new DungeonFlowNode(MiniBossrush_01) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = ExpandPrefabs.phantomagunim_table_01.includedRooms.elements[UnityEngine.Random.Range(0, ExpandPrefabs.phantomagunim_table_01.includedRooms.elements.Count)].room,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = Guid.NewGuid().ToString(),
        };

        // fusebomb dude's room doesn't like to be connected to a boss foyer room. Use utiliroom instead
        private static DungeonFlowNode MiniBossRushNode_FourthBossFoyer = new DungeonFlowNode(MiniBossrush_01) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = ExpandRoomPrefabs.Utiliroom,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = Guid.NewGuid().ToString(),
        };

        private static DungeonFlowNode MiniBossRushNode_FourthBossRoom = new DungeonFlowNode(MiniBossrush_01) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = ExpandPrefabs.fusebombroom01,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = Guid.NewGuid().ToString(),
        };

        private static DungeonFlowNode Bossrush_01_Castle_Miniboss_ElevatorShaftEntrance = new DungeonFlowNode(Bossrush_01_Castle_Modded) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.SPECIAL,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = ExpandPrefabs.bossrush_alternate_entrance,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = true,
            handlesOwnWarping = true,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = Guid.NewGuid().ToString(),
        };


        private static DungeonFlowNode Bossrush_01_Castle_Miniboss_FirstBossFoyer = new DungeonFlowNode(Bossrush_01_Castle_Modded) {
        	isSubchainStandin = false,
        	nodeType = DungeonFlowNode.ControlNodeType.ROOM,
        	roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
        	percentChance = 1f,
        	priority = DungeonFlowNode.NodePriority.MANDATORY,
        	overrideExactRoom = ExpandPrefabs.boss_foyer,
        	overrideRoomTable = null,
        	capSubchain = false,
        	subchainIdentifier = string.Empty,
        	limitedCopiesOfSubchain = false,
        	maxCopiesOfSubchain = 1,
        	subchainIdentifiers = new List<string>(0),
        	receivesCaps = false,
        	isWarpWingEntrance = false,
        	handlesOwnWarping = false,
        	forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
        	loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
        	nodeExpands = false,
        	initialChainPrototype = "n",
        	chainRules = new List<ChainRule>(0),
        	minChainLength = 3,
        	maxChainLength = 8,
        	minChildrenToBuild = 1,
        	maxChildrenToBuild = 1,
        	canBuildDuplicateChildren = false,
        	parentNodeGuid = string.Empty,
        	childNodeGuids = new List<string>(0),
        	loopTargetNodeGuid = string.Empty,
        	loopTargetIsOneWay = false,
        	guidAsString = Guid.NewGuid().ToString(),
        };
        
        private static DungeonFlowNode Bossrush_01_Castle_Miniboss_FirstBossRoom = new DungeonFlowNode(Bossrush_01_Castle_Modded) {
        	isSubchainStandin = false,
        	nodeType = DungeonFlowNode.ControlNodeType.ROOM,
        	roomCategory = PrototypeDungeonRoom.RoomCategory.BOSS,
        	percentChance = 1f,
        	priority = DungeonFlowNode.NodePriority.MANDATORY,
        	overrideExactRoom = ExpandPrefabs.tutorial_minibossroom,
        	overrideRoomTable = null,
        	capSubchain = false,
        	subchainIdentifier = string.Empty,
        	limitedCopiesOfSubchain = false,
        	maxCopiesOfSubchain = 1,
        	subchainIdentifiers = new List<string>(0),
        	receivesCaps = false,
        	isWarpWingEntrance = false,
        	handlesOwnWarping = false,
        	forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
        	loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
        	nodeExpands = false,
        	initialChainPrototype = "n",
        	chainRules = new List<ChainRule>(0),
        	minChainLength = 3,
        	maxChainLength = 8,
        	minChildrenToBuild = 1,
        	maxChildrenToBuild = 1,
        	canBuildDuplicateChildren = false,
        	parentNodeGuid = string.Empty,
        	childNodeGuids = new List<string>(0),
        	loopTargetNodeGuid = string.Empty,
        	loopTargetIsOneWay = false,
        	guidAsString = Guid.NewGuid().ToString(),
        };
        
        private static DungeonFlowNode Bossrush_01_Castle_Miniboss_SecondBossFoyer = new DungeonFlowNode(Bossrush_01_Castle_Modded) {
        	isSubchainStandin = false,
        	nodeType = DungeonFlowNode.ControlNodeType.ROOM,
        	roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
        	percentChance = 1f,
        	priority = DungeonFlowNode.NodePriority.MANDATORY,
        	overrideExactRoom = ExpandPrefabs.boss_foyer,
        	overrideRoomTable = null,
        	capSubchain = false,
        	subchainIdentifier = string.Empty,
        	limitedCopiesOfSubchain = false,
        	maxCopiesOfSubchain = 1,
        	subchainIdentifiers = new List<string>(0),
        	receivesCaps = false,
        	isWarpWingEntrance = false,
        	handlesOwnWarping = false,
        	forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
        	loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
        	nodeExpands = false,
        	initialChainPrototype = "n",
        	chainRules = new List<ChainRule>(0),
        	minChainLength = 3,
        	maxChainLength = 8,
        	minChildrenToBuild = 1,
        	maxChildrenToBuild = 1,
        	canBuildDuplicateChildren = false,
        	parentNodeGuid = string.Empty,
        	childNodeGuids = new List<string>(0),
        	loopTargetNodeGuid = string.Empty,
        	loopTargetIsOneWay = false,
        	guidAsString = Guid.NewGuid().ToString(),
        };
        
        private static DungeonFlowNode Bossrush_01_Castle_Miniboss_SecondBossRoom = new DungeonFlowNode(Bossrush_01_Castle_Modded) {
        	isSubchainStandin = false,
        	nodeType = DungeonFlowNode.ControlNodeType.ROOM,
        	roomCategory = PrototypeDungeonRoom.RoomCategory.BOSS,
        	percentChance = 1f,
        	priority = DungeonFlowNode.NodePriority.MANDATORY,
        	overrideExactRoom = ExpandPrefabs.blocknerminiboss_table_01.includedRooms.elements[UnityEngine.Random.Range(0, ExpandPrefabs.blocknerminiboss_table_01.includedRooms.elements.Count)].room,
        	overrideRoomTable = null,
        	capSubchain = false,
        	subchainIdentifier = string.Empty,
        	limitedCopiesOfSubchain = false,
        	maxCopiesOfSubchain = 1,
        	subchainIdentifiers = new List<string>(0),
        	receivesCaps = false,
        	isWarpWingEntrance = false,
        	handlesOwnWarping = false,
        	forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
        	loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
        	nodeExpands = false,
        	initialChainPrototype = "n",
        	chainRules = new List<ChainRule>(0),
        	minChainLength = 3,
        	maxChainLength = 8,
        	minChildrenToBuild = 1,
        	maxChildrenToBuild = 1,
        	canBuildDuplicateChildren = false,
        	parentNodeGuid = string.Empty,
        	childNodeGuids = new List<string>(0),
        	loopTargetNodeGuid = string.Empty,
        	loopTargetIsOneWay = false,
        	guidAsString = Guid.NewGuid().ToString(),
        };
        
        private static DungeonFlowNode Bossrush_01_Castle_Miniboss_ThirdBossFoyer = new DungeonFlowNode(Bossrush_01_Castle_Modded) {
        	isSubchainStandin = false,
        	nodeType = DungeonFlowNode.ControlNodeType.ROOM,
        	roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
        	percentChance = 1f,
        	priority = DungeonFlowNode.NodePriority.MANDATORY,
        	overrideExactRoom = ExpandPrefabs.boss_foyer,
        	overrideRoomTable = null,
        	capSubchain = false,
        	subchainIdentifier = string.Empty,
        	limitedCopiesOfSubchain = false,
        	maxCopiesOfSubchain = 1,
        	subchainIdentifiers = new List<string>(0),
        	receivesCaps = false,
        	isWarpWingEntrance = false,
        	handlesOwnWarping = false,
        	forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
        	loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
        	nodeExpands = false,
        	initialChainPrototype = "n",
        	chainRules = new List<ChainRule>(0),
        	minChainLength = 3,
        	maxChainLength = 8,
        	minChildrenToBuild = 1,
        	maxChildrenToBuild = 1,
        	canBuildDuplicateChildren = false,
        	parentNodeGuid = string.Empty,
        	childNodeGuids = new List<string>(0),
        	loopTargetNodeGuid = string.Empty,
        	loopTargetIsOneWay = false,
        	guidAsString = Guid.NewGuid().ToString(),
        };
        
        private static DungeonFlowNode Bossrush_01_Castle_Miniboss_ThirdBossRoom = new DungeonFlowNode(Bossrush_01_Castle_Modded) {
        	isSubchainStandin = false,
        	nodeType = DungeonFlowNode.ControlNodeType.ROOM,
        	roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
        	percentChance = 1f,
        	priority = DungeonFlowNode.NodePriority.MANDATORY,
        	overrideExactRoom = ExpandPrefabs.phantomagunim_table_01.includedRooms.elements[UnityEngine.Random.Range(0, ExpandPrefabs.phantomagunim_table_01.includedRooms.elements.Count)].room,
        	overrideRoomTable = null,
        	capSubchain = false,
        	subchainIdentifier = string.Empty,
        	limitedCopiesOfSubchain = false,
        	maxCopiesOfSubchain = 1,
        	subchainIdentifiers = new List<string>(0),
        	receivesCaps = false,
        	isWarpWingEntrance = false,
        	handlesOwnWarping = false,
        	forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
        	loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
        	nodeExpands = false,
        	initialChainPrototype = "n",
        	chainRules = new List<ChainRule>(0),
        	minChainLength = 3,
        	maxChainLength = 8,
        	minChildrenToBuild = 1,
        	maxChildrenToBuild = 1,
        	canBuildDuplicateChildren = false,
        	parentNodeGuid = string.Empty,
        	childNodeGuids = new List<string>(0),
        	loopTargetNodeGuid = string.Empty,
        	loopTargetIsOneWay = false,
        	guidAsString = Guid.NewGuid().ToString(),
        };
        
        // fusebomb dude's room doesn't like to be connected to a boss foyer room. Use utiliroom instead
        private static DungeonFlowNode Bossrush_01_Castle_Miniboss_FourthBossFoyer = new DungeonFlowNode(Bossrush_01_Castle_Modded) {
        	isSubchainStandin = false,
        	nodeType = DungeonFlowNode.ControlNodeType.ROOM,
        	roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
        	percentChance = 1f,
        	priority = DungeonFlowNode.NodePriority.MANDATORY,
        	overrideExactRoom = ExpandRoomPrefabs.Utiliroom,
        	overrideRoomTable = null,
        	capSubchain = false,
        	subchainIdentifier = string.Empty,
        	limitedCopiesOfSubchain = false,
        	maxCopiesOfSubchain = 1,
        	subchainIdentifiers = new List<string>(0),
        	receivesCaps = false,
        	isWarpWingEntrance = false,
        	handlesOwnWarping = false,
        	forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
        	loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
        	nodeExpands = false,
        	initialChainPrototype = "n",
        	chainRules = new List<ChainRule>(0),
        	minChainLength = 3,
        	maxChainLength = 8,
        	minChildrenToBuild = 1,
        	maxChildrenToBuild = 1,
        	canBuildDuplicateChildren = false,
        	parentNodeGuid = string.Empty,
        	childNodeGuids = new List<string>(0),
        	loopTargetNodeGuid = string.Empty,
        	loopTargetIsOneWay = false,
        	guidAsString = Guid.NewGuid().ToString(),
        };
        
        private static DungeonFlowNode Bossrush_01_Castle_Miniboss_FourthBossRoom = new DungeonFlowNode(Bossrush_01_Castle_Modded) {
        	isSubchainStandin = false,
        	nodeType = DungeonFlowNode.ControlNodeType.ROOM,
        	roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
        	percentChance = 1f,
        	priority = DungeonFlowNode.NodePriority.MANDATORY,
        	overrideExactRoom = ExpandPrefabs.fusebombroom01,
        	overrideRoomTable = null,
        	capSubchain = false,
        	subchainIdentifier = string.Empty,
        	limitedCopiesOfSubchain = false,
        	maxCopiesOfSubchain = 1,
        	subchainIdentifiers = new List<string>(0),
        	receivesCaps = false,
        	isWarpWingEntrance = false,
        	handlesOwnWarping = false,
        	forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
        	loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
        	nodeExpands = false,
        	initialChainPrototype = "n",
        	chainRules = new List<ChainRule>(0),
        	minChainLength = 3,
        	maxChainLength = 8,
        	minChildrenToBuild = 1,
        	maxChildrenToBuild = 1,
        	canBuildDuplicateChildren = false,
        	parentNodeGuid = string.Empty,
        	childNodeGuids = new List<string>(0),
        	loopTargetNodeGuid = string.Empty,
        	loopTargetIsOneWay = false,
        	guidAsString = Guid.NewGuid().ToString(),
        };
    }
}

